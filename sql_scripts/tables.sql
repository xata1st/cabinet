DROP DATABASE IF exists db5;
CREATE DATABASE IF NOT EXISTS db5 CHARACTER SET UTF8;
	/*CHARACTER SET cp1251*/;

USE db5;
/*
CREATE TABLE IF NOT EXISTS PARTICIPANTS (
	PARTICIPANT_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	PART_NAME VARCHAR(30) NOT NULL,
	PART_SURNAME VARCHAR(30) NOT NULL,
	ADDRESS VARCHAR(50) NOT NULL
) ENGINE=INNODB;
*/
CREATE TABLE IF NOT EXISTS PARTICIPANTS (
	PARTICIPANT_ID LONG NOT NULL PRIMARY KEY AUTO_INCREMENT,
	REFERRAL_ID VARCHAR(30) NOT NULL UNIQUE,
	VK_PAGE VARCHAR(30) NOT NULL UNIQUE,
	PART_NAME VARCHAR(30) NOT NULL,
	REGISTRATION_DATE DATE NOT NULL,
	LAST_VISIT_DATE DATETIME NOT NULL,
	PHOTO VARCHAR(50)
) ENGINE=ENNODB;

CREATE TABLE IF NOT EXISTS PARTICIPANT_TREE (
	ANCESTOR LONG NOT NULL,
	DESCENDANT LONG NOT NULL,
	PRIMARY KEY(ANCESTOR, DESCENDANT),
	FOREIGN KEY(ANCESTOR)
		REFERENCES PARTICIPANTS(PARTICIPANT_ID)
		ON DELETE CASCADE,
	FOREIGN KEY(DESCENDANT)
		REFERENCES PARTICIPANTS(PARTICIPANT_ID)
		ON DELETE CASCADE
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS MESSAGE (
	MESSAGE_ID LONG NOT NULL PRIMARY KEY AUTO_INCREMENT,
	SENDER LONG NOT NULL,
	RECEIVER LONG NOT NULL,
	CONTENT VARCHAR(255) NOT NULL,
	MESSAGE_DATE DATETIME NOT NULL,
	IS_READ BOOLEAN NOT NULL,
	DELETED BOOLEAN NOT NULL,
	FOREIGN KEY(SENDER)
		REFERENCES PARTICIPANTS(PARTICIPANT_ID)
		ON DELETE CASCADE,
	FOREIGN KEY(RECEIVER)
		REFERENCES PARTICIPANTS(PARTICIPANT_ID)
		ON DELETE CASCADE
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS TASKS(
	TASK_ID LONG NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TASK_ISSUER LONG NOT NULL,
	IMPLEMENTER LONG NOT NULL,
	CONTENT VARCHAR(255) NOT NULL,
	TASK_DATE DATETIME NOT NULL,
	PRIORITY VARCHAR(10) NOT NULL,
	TASK_STATUS VARCHAR(10) NOT NULL,
	FOREIGN KEY(TASK_ISSUER)
		REFERENCES PARTICIPANTS(PARTICIPANT_ID)
		ON DELETE CASCADE,
	FOREIGN KEY(IMPLEMENTER)
		REFERENCES PARTICIPANTS(PARTICIPANT_ID)
		ON DELETE CASCADE
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS COMMENTS(
	COMMENT_ID LONG NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TASK_ID LONG NOT NULL,
	SENDER LONG NOT NULL,
	CONTENT VARCHAR(255) NOT NULL,
	COMMENT_DATE DATETIME NOT NULL,
	IS_READ BOOLEAN NOT NULL,
	DELETED BOOLEAN NOT NULL,
	FOREIGN KEY(TASK_ID)
		REFERENCES TASKS(TASK_ID)
		ON DELETE CASCADE,
	FOREIGN KEY(SENDER)
		REFERENCES PARTICIPANTS(PARTICIPANT_ID)
		ON DELETE CASCADE
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS CALENDAR(
	CALENDER_ID LONG NOT NULL PRIMARY KEY AUTO_INCREMENT,
	CALENDAR_OWNER LONG NOT NULL,
	CONTENT VARCHAR(255) NOT NULL,
	NOTATION_DATE DATE NOT NULL,
	PRIORITY VARCHAR(10) NOT NULL,
	NOTATION_STATUS VARCHAR(10) NOT NULL,
	FOREIGN KEY(CALENDAR_OWNER)
		REFERENCES PARTICIPANTS(PARTICIPANT_ID)
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS PERMISSIONS (
	PERMISSION_ID MEDIUMINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	ROLE VARCHAR(50) NOT NULL UNIQUE
) ENGINE INNODB;

CREATE TABLE IF NOT EXISTS GROUPS (
	GROUP_ID MEDIUMINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	GROUP_NAME VARCHAR(50) NOT NULL UNIQUE
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS GROUP_PERMISSION (
	GROUP_ID MEDIUMINT NOT NULL,
	PERMISSION_ID MEDIUMINT NOT NULL,
	PRIMARY KEY(GROUP_ID, PERMISSION_ID),
	FOREIGN KEY(GROUP_ID)
		REFERENCES GROUPS(GROUP_ID)
		ON DELETE CASCADE,
	FOREIGN KEY(PERMISSION_ID)
		REFERENCES PERMISSIONS(PERMISSION_ID)
		ON DELETE CASCADE
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS USER_INFO (
	USER_ID LONG NOT NULL PRIMARY KEY AUTO_INCREMENT,
	PARTICIPANT_ID LONG NOT NULL,
	LOGIN VARCHAR(30) NOT NULL UNIQUE,
	USER_PASSWORD VARCHAR(60) NOT NULL,
	ACCOUNT_NOT_EXPIRED BOOL NOT NULL,
	ACCOUNT_NOT_BLOCKED BOOL NOT NULL,
	CREDENTIALS_NOT_EXPIRED BOOL NOT NULL,
	ENABLED BOOLEAN NOT NULL,
	FOREIGN KEY(PARTICIPANT_ID)
		REFERENCES PARTICIPANTS(PARTICIPANT_ID)
		ON DELETE CASCADE
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS USER_GROUP (
	USER_ID LONG NOT NULL,
	GROUP_ID MEDIUMINT NOT NULL,
	PRIMARY KEY(USER_ID, GROUP_ID),
	FOREIGN KEY(USER_ID)
		REFERENCES USER_INFO(USER_ID)
		ON DELETE CASCADE,
	FOREIGN KEY(GROUP_ID)
		REFERENCES GROUPS(GROUP_ID)
		ON DELETE CASCADE
) ENGINE=INNODB;