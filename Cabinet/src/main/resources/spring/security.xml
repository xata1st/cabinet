<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">
	
	<!--<http pattern="/login*" security="none"/>-->
	    <http auto-config="true" use-expressions="true">
	    <intercept-url pattern="/login**" access="isAnonymous()"/>
		<intercept-url pattern='/home' access="hasRole('ROLE_USER')" />
	  	<form-login 
		  	login-page="/login" 
		  	default-target-url='/home' 
		  	always-use-default-target='true'
		  	authentication-failure-url="/login?error"
		  	username-parameter="username"
		  	password-parameter="password" />
		<logout
	    	logout-success-url="/home"
  	  	/>
  	  	<session-management>
  	  		<concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
	  	</session-management>
	  	<!-- --> 
	  	<csrf />
	</http>
	
	<!-- 
	<beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
	-->
	<beans:bean id="userDetailsService" class="com.xata.auth.service.CustomJdbcDaoImpl">
	  <beans:property name="dataSource" ref="dataSource"/>
	  <beans:property name="enableGroups" value="true"/>
	  <beans:property name="enableAuthorities" value="false"/>
	  <beans:property name="usersByUsernameQuery">
	  	<beans:value>
	  		SELECT LOGIN, USER_PASSWORD, ENABLED 
	  			FROM USER_INFO
	  			WHERE LOGIN=?
	  	</beans:value>
	  </beans:property>
	  <beans:property name="groupAuthoritiesByUsernameQuery">
	  	<beans:value>
	  		SELECT GROUP_ID, GROUP_NAME, ROLE 
				FROM USER_INFO 
				INNER JOIN (USER_GROUP INNER JOIN (GROUPS INNER JOIN (GROUP_PERMISSION INNER JOIN PERMISSIONS USING (PERMISSION_ID))	USING(GROUP_ID)) USING(GROUP_ID)) USING (USER_ID) WHERE USER_INFO.LOGIN=?
	  	</beans:value>
	  </beans:property>
	</beans:bean>
	 
	 <beans:bean name="bcryptEncoder"
	    class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	 
	 
	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
	  	<password-encoder ref="bcryptEncoder"/>
	  </authentication-provider>
	</authentication-manager>
	 <!-- -->
	<!--
	<authentication-manager>
	  <authentication-provider>
	    <user-service>
	      <user name="jimi" password="jimispassword" authorities="ROLE_USER, ROLE_ADMIN" />
	      <user name="bob" password="bobspassword" authorities="ROLE_USER" />
	    </user-service>
	  </authentication-provider>
	</authentication-manager>
	 --> 
</beans:beans>